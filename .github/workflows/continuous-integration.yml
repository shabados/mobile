# Runs CI tasks on pull requests and pushes

name: Continuous Integration

on:
  pull_request:
    branches:
      - dev
      - master
  push:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        run: npm i

      - name: Run linter
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        run: npm i

      - name: Run tests
        run: npm run test:unit

  typechecking-tests:
    name: Typechecking Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        run: npm i

      - name: Run tests
        run: npm run test:types

  ios-e2e:
    name: iOS End to End Tests
    runs-on: macos-latest
    needs: lint
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.2.app

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        run: npm i

      - name: Cache Pods
        uses: actions/cache@v1
        id: podcache
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('**/Podfile.lock') }}

      - name: Install dependencies for Detox
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Build iOS
        run: npm run build:e2e-ios

      - name: Run E2E Tests
        run: npm run e2e:ios -- --cleanup

  android-e2e:
    name: Android End to End tests
    runs-on: macos-latest
    needs: lint

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Use JDK 1.8
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        run: npm i

      - name: Download Android Emulator Image
        run: |
          echo y | sudo $ANDROID_HOME/tools/bin/sdkmanager --verbose "system-images;android-29;google_apis;x86"
          $ANDROID_HOME/tools/bin/avdmanager create avd -n emu -k "system-images;android-29;google_apis;x86" -b "x86" -c 1G -d 7 -f

      - name: Build Android
        run: npm run build:e2e-android

      - name: Android Emulator
        timeout-minutes: 10
        continue-on-error: true
        run: |
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"

      - name: Run E2E Tests
        run: npm run e2e:android -- --cleanup
